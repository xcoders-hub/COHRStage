@model DMP.Models.ViewModel.AddLeadsView

@{
    Layout = null;
}
<html>
<head>
    <link href="~/Content/Site.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/themes/base/all.css" rel="stylesheet" />
    <style>
        #main {
            margin: 50px 50px 0px 100px;
        }
    </style>
</head>
<body>
    <div id="main">
        <br /><br />
        Please fill out the form below so that you can download the document
        <br />
        @ViewBag.DocTitle
        @using (Html.BeginForm())
        {

            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                    </div>
                </div>



                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Country, new List<SelectListItem> {
                    new SelectListItem { Text="-- Select a Country --", Value="" },
                    new SelectListItem { Text="United States", Value="US" },
                    new SelectListItem { Text="Albania", Value="AL" },
                    new SelectListItem { Text="Argentina", Value="AR" },
                    new SelectListItem { Text="Armenia", Value="AM" },
                    new SelectListItem { Text="Aruba", Value="Aruba" },
                    new SelectListItem { Text="Australia", Value="Australia" },
                    new SelectListItem { Text="Austria", Value="AW" },
                    new SelectListItem { Text="Azerbaijan", Value="AZ" },
                    new SelectListItem { Text="Bahrain", Value="BH" },
                    new SelectListItem { Text="Beijing", Value="CN" },
                    new SelectListItem { Text="Belarus", Value="BY" },
                    new SelectListItem { Text="Belgium", Value="BE" },
                    new SelectListItem { Text="Bosnia", Value="BA" },
                    new SelectListItem { Text="Brazil", Value="BR" },
                    new SelectListItem { Text="Brunei", Value="BN" },
                    new SelectListItem { Text="Bulgaria", Value="Bulgaria" },
                    new SelectListItem { Text="Chile", Value="CL" },
                    new SelectListItem { Text="China", Value="CN" },
                    new SelectListItem { Text="Croatia", Value="HR" },
                    new SelectListItem { Text="Cyprus", Value="CY" },
                    new SelectListItem { Text="Czech Republic", Value="CZ" },
                    new SelectListItem { Text="Denmark", Value="DK" },
                    new SelectListItem { Text="Estonia", Value="EE" },
                    new SelectListItem { Text="Finland", Value="FI" },
                    new SelectListItem { Text="France", Value="FR" },
                    new SelectListItem { Text="Georgia", Value="GE" },
                    new SelectListItem { Text="Germany", Value="DE" },
                    new SelectListItem { Text="Greece", Value="GR" },
                    new SelectListItem { Text="Hong Kong", Value="HK" },
                    new SelectListItem { Text="Hungary", Value="HU" },
                    new SelectListItem { Text="Iceland", Value="IS" },
                    new SelectListItem { Text="India", Value="IN" },
                    new SelectListItem { Text="Indonesia", Value="ID" },
                    new SelectListItem { Text="Iraq", Value="IQ" },
                    new SelectListItem { Text="Ireland", Value="IE" },
                    new SelectListItem { Text="Israel", Value="IL" },
                    new SelectListItem { Text="Italy", Value="IT" },
                    new SelectListItem { Text="Japan", Value="JP" },
                    new SelectListItem { Text="Jordan", Value="JO" },
                    new SelectListItem { Text="Kazakhstan", Value="KZ" },
                    new SelectListItem { Text="Korean", Value="Korea" },
                    new SelectListItem { Text="Kuwait", Value="KW" },
                    new SelectListItem { Text="Kyrgyzstan", Value="KG" },
                    new SelectListItem { Text="Latvia", Value="LV" },
                    new SelectListItem { Text="Lebanon", Value="LB" },
                    new SelectListItem { Text="Lithuania", Value="LT" },
                    new SelectListItem { Text="Luxembourg", Value="LU" },
                    new SelectListItem { Text="Macedonia", Value="MK" },
                    new SelectListItem { Text="Malaysia", Value="MY" },
                    new SelectListItem { Text="Mexico", Value="MX" },
                    new SelectListItem { Text="Moldova", Value="MD" },
                    new SelectListItem { Text="Netherlands", Value="NL" },
                    new SelectListItem { Text="New Zealand", Value="NZ" },
                    new SelectListItem { Text="Northern Ireland", Value="Northern Ireland" },
                    new SelectListItem { Text="Norway", Value="NO" },
                    new SelectListItem { Text="Oman", Value="OM" },
                    new SelectListItem { Text="Pakistan", Value="PK" },
                    new SelectListItem { Text="Philippines", Value="PH" },
                    new SelectListItem { Text="Poland", Value="PL" },
                    new SelectListItem { Text="Portugal", Value="PT" },
                    new SelectListItem { Text="Qatar", Value="QA" },
                    new SelectListItem { Text="Romania", Value="RO" },
                    new SelectListItem { Text="Russia", Value="RU" },
                    new SelectListItem { Text="Saudi Arabia", Value="SA" },
                    new SelectListItem { Text="Scotland", Value="Scotland" },
                    new SelectListItem { Text="Serbia and Montenegro", Value="RS" },
                    new SelectListItem { Text="Singapore", Value="SG" },
                    new SelectListItem { Text="Slovakia", Value="SK" },
                    new SelectListItem { Text="Slovenia", Value="SI" },
                    new SelectListItem { Text="South Africa", Value="ZA" },
                    new SelectListItem { Text="Spain", Value="ES" },
                    new SelectListItem { Text="Sweden", Value="SE" },
                    new SelectListItem { Text="Switzerland", Value="CH" },
                    new SelectListItem { Text="Taiwan", Value="Taiwan" },
                    new SelectListItem { Text="Tajikistan", Value="TJ" },
                    new SelectListItem { Text="Thailand", Value="TH" },
                    new SelectListItem { Text="Turkey", Value="TR" },
                    new SelectListItem { Text="Turkmenistan", Value="TM" },
                    new SelectListItem { Text="Ukraine", Value="UA" },
                    new SelectListItem { Text="United Arab Emirates", Value="AE" },
                    new SelectListItem { Text="United Kingdom", Value="UK" },
                    new SelectListItem { Text="United States", Value="US" },
                    new SelectListItem { Text="Uruguay", Value="UY" },
                    new SelectListItem { Text="Uzbekistan", Value="UZ" },
                    new SelectListItem { Text="Vietnam", Value="VN" },
                    new SelectListItem { Text="Yemen", Value="YE" },
                }, new { @class = "form-control" })

                        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                    </div>
                </div>

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Organization, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Organization, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Organization, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-10">
                        <input type="checkbox" id="preauthorize" name="preauthorize" value="yes" /> Save my information
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Submit" id="submit_btn" class="btn btn-default" />
                    </div>
                </div>
            </div>

            <input type="hidden" name="IPAddress" id="IPAddress" value="" />
            <input type="hidden" name="DocId" id="DocId" value="@ViewBag.DocId" />
        }

    </div>

    <script src="~/Scripts/jquery-1.12.4.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script type="text/javascript">
    function getIP(json) {
        console.log(json.ip);
        $("#IPAddress").val(json.ip);
    }

    </script>
    <script type="text/javascript" src="http://api.ipify.org?format=jsonp&callback=getIP"></script>

</body>
</html>