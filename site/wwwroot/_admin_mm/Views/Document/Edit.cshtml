@model DMP.Models.ViewModel.EditDocumentView

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="main-wrapper">
    <div class="contents">
        <div class="heading">
            <h2>Edit Document: @Model.Title</h2>
        </div>

        <div class="page-contents">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)

                @*<div class="form-row">
                    <div class="form-col-label">
                        <label>Preference</label>
                    </div>

                    <div class="form-col-input">
                        <label>Setting</label>
                    </div>
                </div>*@

                <div class="form-row">
                    <div class="form-col-label">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>

                    <div class="form-col-input">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-col-label">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>

                    <div class="form-col-input">
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @cols = 80, @rows = 10 })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-col-label">
                        @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>

                    <div class="form-col-input">
                        <select name="Category" id="Category" class="form-control text-box single-line">
                            <option value="">Select Category</option>
                            @if (Model.Category == "assets")
                            {
                                <option value="assets" selected>Assets</option>
                                <option value="emailblasts">Email Blasts</option>
                                <option value="file">Files</option>
                            }
                            else if (Model.Category == "emailblasts")
                            {
                                <option value="assets">Assets</option>
                                <option value="emailblasts" selected>Email Blasts</option>
                                <option value="file">Files</option>
                            }
                            else if (Model.Category == "file")
                            {
                                <option value="assets">Assets</option>
                                <option value="emailblasts">Email Blasts</option>
                                <option value="file" selected>Files</option>
                            }
                            else
                            {
                                <option value="assets">Assets</option>
                                <option value="emailblasts">Email Blasts</option>
                                <option value="file">Files</option>
                            }

                        </select>
                        @*@Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                    </div>
                </div>

                @*<div class="form-row">
                    <div class="form-col-label">
                        @Html.LabelFor(model => model.Tags, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>

                    <div class="form-col-input">
                        @Html.EditorFor(model => model.Tags, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Tags, "", new { @class = "text-danger" })
                    </div>
                </div>*@

                <div class="form-row">
                    <div class="form-col-label">
                        @Html.LabelFor(model => model.SalesForceId, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>

                    <div class="form-col-input">
                        @Html.EditorFor(model => model.SalesForceId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SalesForceId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-col-label">
                        @Html.LabelFor(model => model.AlternateTrackingId, htmlAttributes: new { @class = "control-label col-md-2" })
                    </div>




                    <div class="form-col-input">
                        @Html.EditorFor(model => model.AlternateTrackingId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AlternateTrackingId, "", new { @class = "text-danger" })
                    </div>
                </div>            

                <div class="form-row">
                    <div class="form-col-label">
                        @*@Html.LabelFor(model => model.FileName, htmlAttributes: new { @class = "control-label col-md-2" })*@
                        <label for="" class="control-label">Current File</label>
                    </div>

































                    <div class="form-col-input">




                        <a href="@Model.EndpointURL">View current file</a>


                        @*@Html.EditorFor(model => model.FileName, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.ValidationMessageFor(model => model.FileName, "", new { @class = "text-danger" })
                    </div>
                </div>




                <input type="hidden" name="Id" value="@Model.Id" />

                <div class="form-btns">
                    @Html.ActionLink("Back to Documents List", "Index", null, new { @class = "gray-btn" })

                    <input type="submit" value="Save" id="submit_btn" />
                </div>
            }

        </div>
    </div>




</div>
